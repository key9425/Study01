// 0. 함수 선언
function funcA() {
  console.log("funcA");
}

let varA = funcA;
console.log(varA); // 함수 자체가 출력 => 함수도 하나의 값으로 취급하기 때문에 함수 자체를 변수에 할당할 수 있다
varA(); // 해당 변수명으로 함수 호출 가능

//----------------------------------------------------------------------------

// 1. 함수 표현식
// - 선언식이 아님 (선언식은 어떤 변수의 값으로써 담기지 않은 상태로 유지 되어야 한다)
// - 값으로써 함수가 생성 -> 함수의 이름으로 호출 불가능 -> 함수 생성 시 이름 생략 가능 (= 익명 함수)
// - 값으로써 취급 되기 때문에 -> 호이스팅 불가능

let varB = function funcB() {
  console.log("funcB");
};
varB();

// 익명 함수
let varC = function () {
  console.log("funcC");
};

//----------------------------------------------------------------------------

// 2. 화살표 함수
let varD = () => {
  return 1;
};
console.log(varD());

// 화살표 함수가 값을 즉시 반환할 경우
let varE = (value) => value + 1;
console.log(varE(10));
